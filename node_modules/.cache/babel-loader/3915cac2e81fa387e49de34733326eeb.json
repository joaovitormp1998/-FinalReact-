{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jo\\xE3o Vitor\\\\Downloads\\\\PROVA-P2\\\\PROVA-P2\\\\provap20212\\\\src\\\\components\\\\filmesemcartaz\\\\filmesemcartaz.js\";\nimport React, { useState } from 'react';\nimport Swal from 'sweetalert2';\nimport withReactContent from 'sweetalert2-react-content';\nimport { Component } from 'react';\nimport FilmeCard from '../filmecard/filmecard';\nimport './FilmesEmCartaz.css';\n/**\n * Stateless - Sem estado, apenas props. (HTTP)\n * Statefull - Guardam estado e tem props.\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class FilmesEmCartaz extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      filmeLista: []\n    };\n  }\n\n  onFalhaCarregamentoFilmesEmCartaz(erro) {\n    console.log(erro);\n  }\n\n  onFalhaAoEnviarComentario(erro) {\n    console.log(erro);\n  }\n  /*componentDidUpdate() {\n      console.log(\"Atualizado com sucesso!\");\n  }*/\n\n\n  componentDidMount() {\n    fetch(\"https://api.themoviedb.org/3/movie/now_playing?api_key=b4537e21984eb259d2c2b093b7980570\").then(response => response.json(), this.onFalhaCarregamentoFilmesEmCartaz).then(json => this.setState({\n      filmeLista: json.results\n    }), this.onFalhaCarregamentoFilmesEmCartaz);\n  }\n\n  enviarComentario(event) {\n    event.preventDefault();\n    const requestOptions = {\n      method: 'POST',\n      header: {\n        'Content-Type': 'application/json'\n      },\n      body: {\n        \"comentario\": \"\"\n      } //this.state.comentario\n\n    };\n    fetch(\"https://httpbin.org/anything\", requestOptions).then(response => response.json(), this.onFalhaAoEnviarComentario).then(json => this.setState({\n      comentarioLista: json.json\n    }), this.onFalhaAoEnviarComentario);\n    /*\n        formData = new FormData(formularioHtml);\n        object = {}\n        formData.forEach(function(value, key){\n            object[key] = value;\n        });\n        var json = JSON.stringify(object); \n        //Colocar o json no body\n    */\n  }\n\n  comentar(filmeId) {\n    let MySwal = withReactContent(Swal); //MySwal.bind(this)\n\n    MySwal.fire({\n      html: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Enviar Coment\\xE1rio para o Filme \", filmeId]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: this.enviarComentario,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\"\n            /*onChange={this.setState({comentario: \"\"})}*/\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this),\n      background: '#6c60c3',\n      backdrop: 'rgba(110, 97, 198, .1)',\n      showConfirmButton: false,\n      showCloseButton: true\n      /*\n      preConfirm: (login) => {\n          return fetch(`//api.github.com/users/${login}`)\n              .then(response => {\n                  if (!response.ok) {\n                      throw new Error(response.statusText)\n                  }\n                  return response.json()\n          })\n          .catch(error => {\n              Swal.showValidationMessage(`Request failed: ${error}`)\n      })\n      */\n\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      id: \"filmesemcartaz\",\n      children: this.state.filmeLista.map(function (filme, index) {\n        return /*#__PURE__*/_jsxDEV(FilmeCard, {\n          filme: filme,\n          comentar: this.comentar\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 36\n        }, this);\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this);\n  }\n  /**\n   * minhaFuncao = (resolve, reject) => {\n          //..Executo algum processamento\n          try {\n              resultado = 1 + 1;\n              resolve(resultado);\n          } catch(exception) {\n              reject(exception); //MainThread\n          }\n      }\n      minhaPromise = new Promise(minhaFuncao);\n      minhaPromise.then(function(retorno){}, function(erro){});\n   */\n\n\n}","map":{"version":3,"sources":["C:/Users/JoÃ£o Vitor/Downloads/PROVA-P2/PROVA-P2/provap20212/src/components/filmesemcartaz/filmesemcartaz.js"],"names":["React","useState","Swal","withReactContent","Component","FilmeCard","FilmesEmCartaz","constructor","props","state","filmeLista","onFalhaCarregamentoFilmesEmCartaz","erro","console","log","onFalhaAoEnviarComentario","componentDidMount","fetch","then","response","json","setState","results","enviarComentario","event","preventDefault","requestOptions","method","header","body","comentarioLista","comentar","filmeId","MySwal","fire","html","background","backdrop","showConfirmButton","showCloseButton","render","map","filme","index"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\n\nimport Swal from 'sweetalert2';\nimport withReactContent from 'sweetalert2-react-content';\n\nimport { Component } from 'react';\nimport FilmeCard from '../filmecard/filmecard';\n\nimport './FilmesEmCartaz.css';\n\n/**\n * Stateless - Sem estado, apenas props. (HTTP)\n * Statefull - Guardam estado e tem props.\n */\nexport default class FilmesEmCartaz extends Component { \n\n    constructor(props) {\n        super(props);\n        this.state = {filmeLista: []};\n    }\n\n    onFalhaCarregamentoFilmesEmCartaz(erro) {\n        console.log(erro);\n    }\n\n    onFalhaAoEnviarComentario(erro) {\n        console.log(erro);\n    }\n\n    /*componentDidUpdate() {\n        console.log(\"Atualizado com sucesso!\");\n    }*/\n\n    componentDidMount() {\n        fetch(\"https://api.themoviedb.org/3/movie/now_playing?api_key=b4537e21984eb259d2c2b093b7980570\")\n        .then(response => response.json(), this.onFalhaCarregamentoFilmesEmCartaz)\n        .then(json => this.setState({ filmeLista: json.results }), this.onFalhaCarregamentoFilmesEmCartaz);\n    }\n\n    enviarComentario(event) {\n        event.preventDefault();\n        const requestOptions = {\n            method: 'POST',\n            header: {'Content-Type': 'application/json'},\n            body: {\"comentario\": \"\"} //this.state.comentario\n        }\n\n        fetch(\"https://httpbin.org/anything\", requestOptions)\n            .then(response => response.json(), this.onFalhaAoEnviarComentario)\n            .then(json => this.setState({ comentarioLista: json.json }), this.onFalhaAoEnviarComentario);\n        /*\n            formData = new FormData(formularioHtml);\n            object = {}\n            formData.forEach(function(value, key){\n                object[key] = value;\n            });\n            var json = JSON.stringify(object); \n            //Colocar o json no body\n        */\n    }\n    \n    comentar(filmeId) {\n        let MySwal = withReactContent(Swal);\n        //MySwal.bind(this)\n        MySwal.fire({\n            html: (\n                <div>\n                    <h3>Enviar ComentÃ¡rio para o Filme {filmeId}</h3>\n                    <form onSubmit={this.enviarComentario}>                    \n                        <input type=\"text\" /*onChange={this.setState({comentario: \"\"})}*/ />\n                        <input type=\"submit\"/>\n                    </form>\n                </div>\n            ),\n            background: '#6c60c3',\n            backdrop: 'rgba(110, 97, 198, .1)',\n            showConfirmButton: false,\n            showCloseButton: true,  \n            /*\n            preConfirm: (login) => {\n                return fetch(`//api.github.com/users/${login}`)\n                    .then(response => {\n                        if (!response.ok) {\n                            throw new Error(response.statusText)\n                        }\n                        return response.json()\n                })\n                .catch(error => {\n                    Swal.showValidationMessage(`Request failed: ${error}`)\n            })\n            */\n        });\n    }\n\n    render() {\n        return (\n            <section id=\"filmesemcartaz\">\n                {\n                    this.state.filmeLista.map(\n                        function (filme, index) {\n                            return <FilmeCard key={index} filme={filme} comentar={this.comentar} />\n                        }, \n                        this\n                    )\n                }\n            </section>\n        )\n    }\n    \n    /**\n     * minhaFuncao = (resolve, reject) => {\n            //..Executo algum processamento\n            try {\n                resultado = 1 + 1;\n                resolve(resultado);\n            } catch(exception) {\n                reject(exception); //MainThread\n            }\n        }\n        minhaPromise = new Promise(minhaFuncao);\n        minhaPromise.then(function(retorno){}, function(erro){});\n     */\n\n}"]},"metadata":{},"sourceType":"module"}